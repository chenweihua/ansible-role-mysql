- name: Ensure MySQL-python package is ready
  yum: name=MySQL-python state=present
  tags:
   - python

# create user 'repl'@'%' identified by 'repl123';grant replication slave on *.* to 'repl'@'%';flush privileges;
- name: Ensure replication user exists on master
  mysql_user: 
    login_user: "{{ mysql_login_user.name }}"
    login_password: "{{ mysql_login_user.password }}"
    login_unix_socket: "{{ mysql_login_user.unix_socket }}"
    name: "{{ mysql_replication_user.name }}" 
    password: "{{ mysql_replication_user.password }}"
    host: "{{ mysql_replication_user.host }}"
    priv: "{{ mysql_replication_user.priv | default('*.*:REPLICATION SLAVE,REPLICATION CLIENT') }}"
    state: present 
  when: >
    (mysql_replication_role == 'master')
    and mysql_replication_user
    and (mysql_replication_master != '')

# config master
- name: Install rpl_semi_sync_master plugin
  shell: mysql -NBe "install plugin rpl_semi_sync_master soname 'semisync_master.so';"
  environment: 
    PATH: "{{ mysql_path }}"
  register: rpl_semi_sync_master
  when: >
    mysql_replication_role == 'master'
      
- name: Set master mysql global variable
  mysql_variables:
    variable: "{{ item.variable }}"
    value: "{{ item.value }}"
  with_items:
    - { variable: 'rpl_semi_sync_master_enabled', value: 'on' }
    - { variable: 'rpl_semi_sync_master_timeout', value: '1000000' }
  when: >
    mysql_replication_role == 'master'
    and rpl_semi_sync_master|success
  # ignore_errors: true

# config slave
- name: Install rpl_semi_sync_slave plugin
  shell: mysql -NBe "install plugin rpl_semi_sync_slave soname 'semisync_slave.so';"
  environment: 
    PATH: "{{ mysql_path }}"
  register: rpl_semi_sync_slave
  when: >
    mysql_replication_role == 'slave'
  # ignore_errors: true

- name: Set slave mysql global variable
  mysql_variables:
    variable: "{{ item.variable }}"
    value: "{{ item.value }}"
  with_items:
    - { variable: 'rpl_semi_sync_slave_enabled', value: 'on' }
  when: >
    mysql_replication_role == 'slave'
    and rpl_semi_sync_slave|success
  # ignore_errors: true

# change master to 
- name: Configure replication on the slave.
  mysql_replication:
    mode: changemaster
    master_host: "{{ mysql_replication_master }}"
    master_user: "{{ mysql_replication_user.name }}"
    master_password: "{{ mysql_replication_user.password }}"
    master_auto_position: 1
  when: >
    (mysql_replication_role == 'slave')
    and (mysql_replication_master != '')
    and mysql_replication_user

# start slave
- name: Start replication
  mysql_replication: mode=startslave
  when: >
    (mysql_replication_role == 'slave')
    and (mysql_replication_master != '')
